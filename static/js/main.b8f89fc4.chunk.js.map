{"version":3,"sources":["components/Details.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Details","info","useState","details","card","setCard","useEffect","a","fetch","id","response","ok","Error","message","json","responseCard","console","error","getCard","src","avatar","alt","name","city","company","position","List","items","phonebook","setItems","setDetails","process","responseItems","getItems","map","o","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAEe,SAASA,EAAT,GAA4B,IAATC,EAAQ,EAARA,KAAQ,EAChBC,mBAAS,CAACC,QAAS,KADH,mBACjCC,EADiC,KAC3BC,EAD2B,KAmBxC,OAjBAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,+EAE2BC,MAAM,uGAAD,OAAwGP,EAAKQ,GAA7G,UAFhC,WAEUC,EAFV,QAGkBC,GAHlB,sBAIY,IAAIC,MAAMF,EAASG,SAJ/B,uBAO+BH,EAASI,OAPxC,OAOUC,EAPV,OAQIV,EAAQU,GARZ,kDAUIC,QAAQC,MAAR,MAVJ,2DADc,uBAAC,WAAD,wBAcdC,MAIA,gCACGd,EAAO,qBAAKe,IAAKf,EAAKgB,OAAQC,IAAI,KAAO,KACzCjB,EAAO,yCAAYA,EAAKkB,QAAc,KACtClB,EAAKD,QAAU,yCAAYC,EAAKD,QAAQoB,QAAc,KACtDnB,EAAKD,QAAU,4CAAeC,EAAKD,QAAQqB,WAAiB,KAC5DpB,EAAKD,QAAU,6CAAgBC,EAAKD,QAAQsB,YAAkB,QCxBtD,SAASC,IAAQ,IAAD,EACCxB,mBAAS,CACrCyB,MAAO,KAFoB,mBACtBC,EADsB,KACXC,EADW,OAKC3B,mBAAS,IALV,mBAKtBC,EALsB,KAKb2B,EALa,KA2B7B,OArBAxB,qBAAU,WAAM,4CACd,8BAAAC,EAAA,+EAE2BC,MAAMuB,kHAFjC,WAEUrB,EAFV,QAGkBC,GAHlB,sBAIY,IAAIC,MAAMF,EAASG,SAJ/B,uBAOgCH,EAASI,OAPzC,OAOUkB,EAPV,OAQIH,EAAS,CAAEF,MAAOK,IARtB,kDAUIhB,QAAQC,MAAR,MAVJ,2DADc,uBAAC,WAAD,wBAcdgB,KACC,IAOD,gCACE,6BAEIL,EAAUD,MAAMO,KAAI,SAAAC,GAAC,OAAI,oBAAeC,QAAS,kBARpCnC,EAQsDkC,OAPzEL,GAAW,kBAAO7B,KADpB,IAAqBA,GAQY,SAA+CkC,EAAEb,MAAxCa,EAAE1B,SAGvCN,EAAQM,GAAK,cAACT,EAAD,CAASC,KAAME,IAAa,QClCjC,SAASkC,IAEtB,OACE,cAACX,EAAD,ICNJ,IAYeY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b8f89fc4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Details({ info }) {\n  const [card, setCard] = useState({details: {}});\n  useEffect(() => {\n    async function getCard() {\n      try {\n        const response = await fetch(`https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/${info.id}.json`)\n        if (!response.ok) {\n          throw new Error(response.message);\n        }\n\n        const responseCard = await response.json();\n        setCard(responseCard);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    getCard();\n  });\n\n  return (\n    <div>\n      {card ? <img src={card.avatar} alt=\"\"/> : null}\n      {card ? <div>Name: {card.name}</div> : null}\n      {card.details ? <div>City: {card.details.city}</div> : null}\n      {card.details ? <div>Company: {card.details.company}</div> : null}\n      {card.details ? <div>Position: {card.details.position}</div> : null}\n    </div>\n\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport Details from './Details';\n\nexport default function List() {\n  const [phonebook, setItems] = useState({\n    items: [],\n  });\n\n  const [details, setDetails] = useState({});\n  useEffect(() => {\n    async function getItems() {\n      try {\n        const response = await fetch(process.env.REACT_APP_USERS_LIST);\n        if (!response.ok) {\n          throw new Error(response.message);\n        }\n\n        const responseItems = await response.json();\n        setItems({ items: responseItems });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    getItems();\n  }, []);\n\n  function handleClick(info) {\n    setDetails(() => (info));\n  }\n\n  return (\n    <div>\n      <ul>\n        {\n          phonebook.items.map(o => <li key={o.id} onClick={() => handleClick(o)}>{o.name}</li>)\n        }\n      </ul>\n      {details.id ? <Details info={details}/> : null}\n    </div>\n\n\n  )\n}\n","import React, { useState } from 'react';\nimport List from '../src/components/List'\n\nexport default function App() {\n\n  return (\n    <List />\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}